"use strict";(self.webpackChunkweb_app=self.webpackChunkweb_app||[]).push([[5546],{5546:(u,a,o)=>{o.r(a),o.d(a,{DocsComponentThemingModule:()=>m});var i=o(6814),l=o(1896),r=o(617),c=o(8662),e=o(5879),h=o(6734);const d=[{path:"",component:(()=>{class t{static#e=this.\u0275fac=function(n){return new(n||t)};static#t=this.\u0275cmp=e.Xpm({type:t,selectors:[["msk-docs-component-theming"]],decls:51,vars:2,consts:[["cdkScrollable","",1,"absolute","inset-0","flex","min-w-0","flex-col","overflow-y-auto"],[1,"flex-0","bg-card","flex","flex-col","border-b","p-6","dark:bg-transparent","sm:flex-row","sm:items-center","sm:justify-between","sm:px-10","sm:py-8"],[1,"min-w-0","flex-1"],[1,"flex","flex-wrap","items-center","space-x-1","font-medium","leading-4","rtl:space-x-reverse"],[1,"text-primary-500","whitespace-nowrap"],[1,"icon-size-4","text-secondary","mat-icon-rtl-mirror",3,"svgIcon"],[1,"text-secondary","whitespace-nowrap"],[1,"mt-2"],[1,"truncate","text-3xl","font-extrabold","leading-7","tracking-tight","sm:leading-10","md:text-4xl"],[1,"prose","prose-sm","max-w-3xl","flex-auto","p-6","sm:p-10"],["msk-highlight","","lang","html"]],template:function(n,p){1&n&&(e.TgZ(0,"div",0)(1,"div",1)(2,"div",2)(3,"div",3)(4,"a",4),e._uU(5," Documentation "),e.qZA(),e._UZ(6,"mat-icon",5),e.TgZ(7,"a",4),e._uU(8," Guides "),e.qZA(),e._UZ(9,"mat-icon",5),e.TgZ(10,"a",6),e._uU(11," Component Theming "),e.qZA()(),e.TgZ(12,"div",7)(13,"h2",8),e._uU(14," Component Theming "),e.qZA()()()(),e.TgZ(15,"div",9)(16,"p"),e._uU(17," Normally, Angular Material requires a separate .scss file for theming and that file must be included into a mixin where the defined Angular Material themes can be applied. This approach not only forces you to create another .scss file for component theming, but it also forces you to import that file from another place just so you can use the Angular Material mixin to apply the theme. "),e.qZA(),e.TgZ(18,"p"),e._uU(19," This brakes the modularity because now you have a reference to your component's theming file from who knows where and you also have to remember to do all this again and again every time you want to use the theme colors from your components. "),e.qZA(),e.TgZ(20,"p"),e._uU(21," This project, on the other hand, provides a way easier method to add theming to your components: Tailwind utilities! "),e.qZA(),e.TgZ(22,"h3"),e._uU(23,"Color palette utilities"),e.qZA(),e.TgZ(24,"p"),e._uU(25,' As mentioned before, Angular Material uses 3 main palettes to generate themes; "Primary", "Accent" and "Warn". Being able to access these palettes and use their colors with your components is a must have feature, otherwise you wouldn\'t be able to create components, apps or pages that "belong" to your app. '),e.qZA(),e.TgZ(26,"p"),e._uU(27," All palette colors are available as Tailwind utility classes, and since these palettes are no more than Tailwind color palettes, they are processed as one by Tailwind, therefore, every single color related utility you have in Tailwind also have "),e.TgZ(28,"strong"),e._uU(29,"primary"),e.qZA(),e._uU(30,", "),e.TgZ(31,"strong"),e._uU(32,"accent"),e.qZA(),e._uU(33," and "),e.TgZ(34,"strong"),e._uU(35,"warn"),e.qZA(),e._uU(36," colors and you can use them just like any other color utility: "),e.qZA(),e.TgZ(37,"textarea",10),e._uU(38,'      \x3c!-- Default primary color as the text color --\x3e\n      <h1 class="text-primary">I\'m a Title</h1>\n\n      \x3c!-- accent-300 as the text color --\x3e\n      <h1 class="text-accent-300">I\'m a Title</h1>\n\n      \x3c!-- warn-800 as the text color --\x3e\n      <h1 class="text-warn-800">I\'m a Title</h1>\n    '),e.qZA(),e.TgZ(39,"textarea",10),e._uU(40,'      \x3c!-- Default primary color as the bg color --\x3e\n      <div class="bg-primary"></div>\n\n      \x3c!-- accent-300 as the bg color --\x3e\n      <div class="bg-accent-300"></div>\n\n      \x3c!-- warn-800 as the bg color --\x3e\n      <div class="bg-warn-800"></div>\n    '),e.qZA(),e.TgZ(41,"textarea",10),e._uU(42,'      \x3c!-- primary-600 as the bg and the contrasting color as the text color --\x3e\n      <div class="bg-primary-600 text-on-primary-600"></div>\n\n      \x3c!-- accent-300 as the bg and the contrasting color as the text color --\x3e\n      <div class="bg-accent-300 text-on-accent-300"></div>\n\n      \x3c!-- warn-800 as the bg and the contrasting color as the text color --\x3e\n      <div class="bg-warn-800 text-on-warn-800"></div>\n    '),e.qZA(),e.TgZ(43,"textarea",10),e._uU(44,'      \x3c!-- Some more examples --\x3e\n      <div class="text-primary bg-primary-100 border-accent ring-warn-400 ..."></div>\n\n      \x3c!-- Some more examples --\x3e\n      <div class="text-primary text-opacity-50"></div>\n\n      \x3c!-- Some more examples --\x3e\n      <div class="bg-accent-900 bg-opacity-5"></div>\n    '),e.qZA(),e.TgZ(45,"h3"),e._uU(46,"Other color utilities"),e.qZA(),e.TgZ(47,"p"),e._uU(48,' There are also other color utilities to quickly set the background or the text color of an element. These special utilities have different values on different schemes. For example, "bg-card" will have different colors depending on the selected scheme so you don\'t have to set the background color explicitly for "Dark" themes. '),e.qZA(),e.TgZ(49,"textarea",10),e._uU(50,"      \x3c!-- Default text color --\x3e\n      .text-default\n\n      \x3c!-- Secondary text color --\x3e\n      .text-secondary\n\n      \x3c!-- Hint text color --\x3e\n      .text-hint\n\n      \x3c!-- Disabled text color --\x3e\n      .text-disabled\n\n      \x3c!-- Default border color --\x3e\n      .divider\n\n      \x3c!-- Card background color --\x3e\n      .bg-card\n\n      \x3c!-- Faded background color for hovered states --\x3e\n      .bg-hover\n\n      \x3c!-- Default background color --\x3e\n      .bg-default\n\n      \x3c!-- Default dialog background color --\x3e\n      .bg-dialog'\n\n      \x3c!-- Default background color as the ring color --\x3e\n      .ring-bg-default\n\n      \x3c!-- Default card background color as the ring color --\x3e\n      .ring-bg-card\n    "),e.qZA()()()),2&n&&(e.xp6(6),e.Q6J("svgIcon","heroicons_solid:chevron-right"),e.xp6(3),e.Q6J("svgIcon","heroicons_solid:chevron-right"))},dependencies:[r.Hw,h.k],encapsulation:2})}return t})()}];let m=(()=>{class t{static#e=this.\u0275fac=function(n){return new(n||t)};static#t=this.\u0275mod=e.oAB({type:t});static#o=this.\u0275inj=e.cJS({imports:[i.ez,l.Bz.forChild(d),r.Ps,c.i]})}return t})()}}]);