"use strict";(self.webpackChunkweb_app=self.webpackChunkweb_app||[]).push([[1890],{1890:(m,a,o)=>{o.r(a),o.d(a,{DocsTypographyModule:()=>d});var l=o(1368),r=o(2992),n=o(1560),p=o(1040),e=o(4496),c=o(9676);const h=[{path:"",component:(()=>{class t{static#e=this.\u0275fac=function(s){return new(s||t)};static#t=this.\u0275cmp=e.In1({type:t,selectors:[["msk-docs-typography"]],decls:38,vars:1,consts:[["cdkScrollable","",1,"absolute","inset-0","flex","min-w-0","flex-col","overflow-y-auto"],[1,"flex-0","bg-card","flex","flex-col","border-b","p-6","dark:bg-transparent","sm:flex-row","sm:items-center","sm:justify-between","sm:px-10","sm:py-8"],[1,"min-w-0","flex-1"],[1,"flex","flex-wrap","items-center","space-x-1","font-medium","leading-4","rtl:space-x-reverse"],[1,"text-primary-500","whitespace-nowrap"],[1,"icon-size-4","text-secondary","mat-icon-rtl-mirror",3,"svgIcon"],[1,"text-secondary","whitespace-nowrap"],[1,"mt-2"],[1,"truncate","text-3xl","font-extrabold","leading-7","tracking-tight","sm:leading-10","md:text-4xl"],[1,"prose","prose-sm","max-w-3xl","flex-auto","p-6","sm:p-10"],["href","https://github.com/tailwindlabs/tailwindcss-typography","target","_blank"],["msk-highlight","","lang","html"]],template:function(s,u){1&s&&(e.I0R(0,"div",0)(1,"div",1)(2,"div",2)(3,"div",3)(4,"a",4),e.OEk(5," Documentation "),e.C$Y(),e.wR5(6,"mat-icon",5),e.I0R(7,"a",6),e.OEk(8," Typography "),e.C$Y()(),e.I0R(9,"div",7)(10,"h2",8),e.OEk(11," Typography "),e.C$Y()()()(),e.I0R(12,"div",9)(13,"h2"),e.OEk(14,"Body font size"),e.C$Y(),e.I0R(15,"p"),e.OEk(16," The default body text is set to "),e.I0R(17,"strong"),e.OEk(18,"14px"),e.C$Y(),e.OEk(19,". This allows building more complex and dense layouts without needing too much screen space. Applications usually need to show a lot more information on one page compared to, let's say, a blog post. This requires more denser layouts hence the smaller default body font size. "),e.C$Y(),e.I0R(20,"h2"),e.OEk(21,"Rich text"),e.C$Y(),e.I0R(22,"p"),e.OEk(23," When building a web application, you don't want to have default HTML element styles interfering with your design. This is because those style are designed for building web sites, therefore, This project takes advantage of Tailwind's reset styles to reset all element styles by default. "),e.C$Y(),e.I0R(24,"p"),e.OEk(25," This way, you can build complex layouts and application interfaces without needing to reset element styles over and over again. "),e.C$Y(),e.I0R(26,"p"),e.OEk(27," But this introduce a new problem when you actually want to show a rich-text content with paragraphs, lists, links, titles and other HTML elements. They will look bad and they won't be properly styled. "),e.C$Y(),e.I0R(28,"p"),e.OEk(29," To overcome this issue, This project uses "),e.I0R(30,"a",10),e.OEk(31," Tailwind's Official Typography Plugin "),e.C$Y(),e.OEk(32," \xa0which adds "),e.I0R(33,"code"),e.OEk(34,"prose"),e.C$Y(),e.OEk(35," class to provide typographic defaults: "),e.C$Y(),e.I0R(36,"textarea",11),e.OEk(37,'      <div class="prose">\n        \x3c!-- Some rich-text content with paragraphs, lists, links and etc. --\x3e\n      </div>\n    '),e.C$Y()()()),2&s&&(e.yG2(6),e.E7m("svgIcon","heroicons_solid:chevron-right"))},dependencies:[n.qL,c._],encapsulation:2})}return t})()}];let d=(()=>{class t{static#e=this.\u0275fac=function(s){return new(s||t)};static#t=this.\u0275mod=e.a4G({type:t});static#o=this.\u0275inj=e.s3X({imports:[l.MD,r.qQ.forChild(h),n.oB,p.e]})}return t})()}}]);